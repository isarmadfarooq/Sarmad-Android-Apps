<resources>
    <string name="app_name">Blog App</string>
    <string name="splash_main_txt">BLOG.</string>
    <string name="splasgbackground">splashBackground</string>
    <string name="design_by">Design by</string>
    <string name="sarmadtechempire">sarmadtechempire</string>
    <string name="welcomescreenbackground">welcomescreenbackground</string>
    <string name="share_your_story_txt">Share your story</string>
    <string name="with_us_txt">with us</string>
    <string name="login_btn_txt">Login</string>
    <string name="new_here_txt">New here?</string>
    <string name="register_btn_txt">Register</string>
    <string name="enter_your_email_et">Enter Your Email</string>
    <string name="enter_password_et">Enter Password</string>
    <string name="enter_your_name_register_et">Enter Your Name</string>
    <string name="enter_your_name_et">Enter Your Name</string>
    <string name="signup_with_google_tv">SignUp with Google</string>
    <string name="register_with_google_tv">Register with Google?</string>
    <string name="or_tv">Or</string>
    <string name="register_with_google_btn">Register with Google</string>
    <string name="new_feeds_tv">New feeds</string>
    <string name="save_article_btn">Save Article</string>
    <string name="search_view_hint_text">Search</string>
    <string name="blog_heading_txt">Please Start Writing Better Git Commits</string>
    <string name="blog_user_profile_image">Blog User Profile Image</string>
    <string name="blogger_name_tv">Sarmad\nBlogger</string>
    <string name="date_tv">Jul 29, 2022</string>
    <string name="blog_column_tv">I recently read a helpful article on Hashnode by Simon Egersand titled Write Git Commit Messages Your Colleagues Will Love, and it inspired me to dive a little deeper into understanding what makes a Git commit good or bad.</string>
    <string name="blog_post_btn_readmore">Read more</string>
    <string name="like_counts_tv">200</string>
    <string name="add_blog_float_btn">add_blog_float_btn</string>
    <string name="addarticlescreenbackground">addArticleScreenBackground</string>
    <string name="backiconiv">backIconIv</string>
    <string name="add_new_blog_here_main_title">Add New Blog here</string>
    <string name="blog_title">Blog Title</string>
    <string name="blog_description_tv">Blog Description</string>
    <string name="blog_title_hint">Blog Title</string>
    <string name="bolg_description_hint">Bolg Description</string>
    <string name="add_blog_btn">Add Blog</string>
    <string name="default_web_client_id">1046734747211-tr1pv2lb88093d25bu9d9ba4hup6mcmt.apps.googleusercontent.com</string>
    <string name="reset_password">Reset Password</string>
    <string name="read_more_activity_Title">Please Start Writing Better Git Commits</string>
    <string name="user_name">Sarmad Farooq</string>
    <string name="blog_description">I recently read a helpful article on Hashnode by Simon Egersand titled Write Git Commit Messages Your Colleagues Will Love, and it inspired me to dive a little deeper into understanding what makes a Git commit good or bad. You\'re probably thinking to yourself, my commits are just fine, thank you. But are they really? Let\'s take a closer look. Why Are Good Commits Important? Git commits are like little snapshots of your code. They let you and others see what changes were made, and when. They also let you roll back those changes when something inevitably goes wrong. That\'s why it\'s important to make sure your git commits are as clear and concise as possible. Otherwise, you run the risk of confusing yourself and others down the road. The Problem With Your Current Commits There are three main problems I find with many commits: They\'re not informative enough. They\'re not helpful to others. You\'re putting too many changes in one commit. Not Enough Information These commits are essentially worthless. You know the ones I\'m talking about - they just say updated or fixed bug or</string>
    <string name="bold_txt">Bold</string>
    <string name="italic_btn">Italic</string>
    <string name="u_line_btn">U_line</string>
    <string name="clear_fmt">No_fmt</string>
    <string name="left_align">Left</string>
    <string name="align_right">Right</string>
    <string name="align_center">Center</string>
</resources>